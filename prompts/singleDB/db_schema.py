advising_db_schema = """\
# AREA ( COURSE_ID, AREA )
# COURSE_OFFERING ( OFFERING_ID, COURSE_ID, SEMESTER, SECTION_NUMBER, START_TIME, END_TIME, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, HAS_FINAL_PROJECT, HAS_FINAL_EXAM, TEXTBOOK, CLASS_ADDRESS, ALLOW_AUDIT )
# COURSE_PREREQUISITE ( PRE_COURSE_ID, COURSE_ID )
# COURSE ( COURSE_ID, NAME, DEPARTMENT, NUMBER, CREDITS, ADVISORY_REQUIREMENT, ENFORCED_REQUIREMENT, DESCRIPTION, NUM_SEMESTERS, NUM_ENROLLED, HAS_DISCUSSION, HAS_LAB, HAS_PROJECTS, HAS_EXAMS, NUM_REVIEWS, CLARITY_SCORE, EASINESS_SCORE, HELPFULNESS_SCORE )
# INSTRUCTOR ( INSTRUCTOR_ID, NAME, UNIQNAME )
# OFFERING_INSTRUCTOR ( OFFERING_INSTRUCTOR_ID, OFFERING_ID, INSTRUCTOR_ID )
# PROGRAM_COURSE ( PROGRAM_ID, COURSE_ID, WORKLOAD, CATEGORY )
# PROGRAM_REQUIREMENT ( PROGRAM_ID, CATEGORY, MIN_CREDIT, ADDITIONAL_REQ )
# PROGRAM ( PROGRAM_ID,NAME,COLLEGE,INTRODUCTION )
# SEMESTER ( SEMESTER_ID, SEMESTER, YEAR )
# STUDENT_RECORD ( STUDENT_ID, COURSE_ID, SEMESTER, GRADE, HOW, TRANSFER_SOURCE, EARN_CREDIT, REPEAT_TERM, TEST_ID, OFFERING_ID )
# STUDENT ( STUDENT_ID, LASTNAME, FIRSTNAME, PROGRAM_ID, DECLARE_MAJOR, TOTAL_CREDIT, TOTAL_GPA, ENTERED_AS, ADMIT_TERM, PREDICTED_GRADUATION_SEMESTER, DEGREE, MINOR, INTERNSHIP )
#
# COURSE_OFFERING.OFFERING_ID = OFFERING_INSTRUCTOR.OFFERING_ID
# COURSE_OFFERING.COURSE_ID = COURSE.COURSE_ID
# COURSE_OFFERING.SEMESTER = SEMESTER.SEMESTER
# COURSE_PREREQUISITE.PRE_COURSE_ID = COURSE.COURSE_ID
# COURSE_PREREQUISITE.COURSE_ID = COURSE.COURSE_ID
# OFFERING_INSTRUCTOR.INSTRUCTOR_ID = INSTRUCTOR.INSTRUCTOR_ID
# PROGRAM_COURSE.PROGRAM_ID = PROGRAM.PROGRAM_ID
# PROGRAM_COURSE.COURSE_ID = COURSE.COURSE_ID
# PROGRAM_COURSE.CATEGORY = PROGRAM_REQUIREMENT.CATEGORY
# PROGRAM_REQUIREMENT.PROGRAM_ID = PROGRAM.PROGRAM_ID
# STUDENT.PROGRAM_ID = PROGRAM.PROGRAM_ID
# STUDENT.ADMIT_TERM = SEMESTER.SEMESTER_ID
# STUDENT.PREDICTED_GRADUATION_SEMESTER = SEMESTER.SEMESTER_ID
# STUDENT_RECORD.STUDENT_ID = STUDENT.STUDENT_ID
# STUDENT_RECORD.COURSE_ID = COURSE.COURSE_ID
# STUDENT_RECORD.SEMESTER = SEMESTER.SEMESTER_ID"""

atis_db_schema = """\
# AIRCRAFT ( AIRCRAFT_CODE, AIRCRAFT_DESCRIPTION, MANUFACTURER, BASIC_TYPE, ENGINES, PROPULSION, WIDE_BODY, WING_SPAN, LENGTH, WEIGHT, CAPACITY, PAY_LOAD, CRUISING_SPEED, RANGE_MILES, PRESSURIZED )
# AIRLINE ( AIRLINE_CODE, AIRLINE_NAME, NOTE )
# AIRPORT_SERVICE ( CITY_CODE, AIRPORT_CODE, MILES_DISTANT, DIRECTION, MINUTES_DISTANT )
# AIRPORT ( AIRPORT_CODE, AIRPORT_NAME, AIRPORT_LOCATION, STATE_CODE, COUNTRY_NAME, TIME_ZONE_CODE, MINIMUM_CONNECT_TIME )
# CITY ( CITY_CODE, CITY_NAME, STATE_CODE, COUNTRY_NAME, TIME_ZONE_CODE )
# CLASS_OF_SERVICE ( BOOKING_CLASS, RANK, CLASS_DESCRIPTION )
# CODE_DESCRIPTION ( CODE, DESCRIPTION )
# COMPARTMENT_CLASS ( COMPARTMENT, CLASS_TYPE )
# DATE_DAY ( MONTH_NUMBER, DAY_NUMBER, YEAR, DAY_NAME )
# DAYS ( DAYS_CODE,DAY_NAME )
# DUAL_CARRIER ( MAIN_AIRLINE, LOW_FLIGHT_NUMBER, HIGH_FLIGHT_NUMBER, DUAL_AIRLINE, SERVICE_NAME )
# EQUIPMENT_SEQUENCE ( AIRCRAFT_CODE_SEQUENCE, AIRCRAFT_CODE )
# FARE_BASIS ( FARE_BASIS_CODE, BOOKING_CLASS, CLASS_TYPE, PREMIUM, ECONOMY, DISCOUNTED, NIGHT, SEASON, BASIS_DAYS )
# FARE ( FARE_ID, FROM_AIRPORT, TO_AIRPORT, FARE_BASIS_CODE, FARE_AIRLINE, RESTRICTION_CODE, ONE_DIRECTION_COST, ROUND_TRIP_COST, ROUND_TRIP_REQUIRED )
# FLIGHT_FARE ( FLIGHT_ID, FARE_ID )
# FLIGHT_LEG ( FLIGHT_ID, LEG_NUMBER, LEG_FLIGHT )
# FLIGHT_STOP ( FLIGHT_ID, STOP_NUMBER, STOP_DAYS, STOP_AIRPORT, ARRIVAL_TIME, ARRIVAL_AIRLINE, ARRIVAL_FLIGHT_NUMBER, DEPARTURE_TIME, DEPARTURE_AIRLINE, DEPARTURE_FLIGHT_NUMBER, STOP_TIME )
# FLIGHT ( FLIGHT_ID, FLIGHT_DAYS, FROM_AIRPORT, TO_AIRPORT, DEPARTURE_TIME, ARRIVAL_TIME, AIRLINE_FLIGHT, AIRLINE_CODE, FLIGHT_NUMBER, AIRCRAFT_CODE_SEQUENCE, MEAL_CODE, STOPS, CONNECTIONS, DUAL_CARRIER, TIME_ELAPSED )
# FOOD_SERVICE ( MEAL_CODE, MEAL_NUMBER, COMPARTMENT, MEAL_DESCRIPTION )
# GROUND_SERVICE ( CITY_CODE, AIRPORT_CODE, TRANSPORT_TYPE, GROUND_FARE )
# MONTH ( MONTH_NUMBER, MONTH_NAME )
# RESTRICTION ( RESTRICTION_CODE, ADVANCE_PURCHASE, STOPOVERS, SATURDAY_STAY_REQUIRED, MINIMUM_STAY, MAXIMUM_STAY, APPLICATION, NO_DISCOUNTS )
# STATE ( STATE_CODE, STATE_NAME, COUNTRY_NAME )
# TIME_INTERVAL ( PERIOD, BEGIN_TIME, END_TIME )
# TIME_ZONE ( TIME_ZONE_CODE, TIME_ZONE_NAME, HOURS_FROM_GMT )
#
# AIRPORT.STATE_CODE = STATE.STATE_CODE
# AIRPORT.COUNTRY_NAME = STATE.COUNTRY_NAME
# AIRPORT.TIME_ZONE_CODE = TIME_ZONE.TIME_ZONE_CODE
# AIRPORT_SERVICE.CITY_CODE = CITY.CITY_CODE
# AIRPORT_SERVICE.AIRPORT_CODE = AIRPORT.AIRPORT_CODE
# CITY.STATE_CODE = STATE.STATE_CODE
# CITY.COUNTRY_NAME = STATE.COUNTRY_NAME
# CITY.TIME_ZONE_CODE = TIME_ZONE.TIME_ZONE_CODE
# DAYS.DAY_NAME = DATE_DAY.DAY_NAME
# DUAL_CARRIER.MAIN_AIRLINE = AIRLINE.AIRLINE_CODE
# DUAL_CARRIER.DUAL_AIRLINE = AIRLINE.AIRLINE_CODE
# EQUIPMENT_SEQUENCE.AIRCRAFT_CODE = AIRCRAFT.AIRCRAFT_CODE
# FARE.FROM_AIRPORT = AIRPORT.AIRPORT_CODE
# FARE.TO_AIRPORT = AIRPORT.AIRPORT_CODE
# FARE.FARE_BASIS_CODE = FARE_BASIS.FARE_BASIS_CODE
# FARE.FARE_AIRLINE = AIRLINE.AIRLINE_CODE
# FARE.RESTRICTION_CODE = RESTRICTION.RESTRICTION_CODE
# FARE_BASIS.BOOKING_CLASS = CLASS_OF_SERVICE.BOOKING_CLASS
# FARE_BASIS.CLASS_TYPE = COMPARTMENT_CLASS.CLASS_TYPE
# FARE_BASIS.BASIS_DAYS = DAYS.DAYS_CODE
# FLIGHT.FLIGHT_DAYS = DAYS.DAYS_CODE
# FLIGHT.FROM_AIRPORT = AIRPORT.AIRPORT_CODE
# FLIGHT.TO_AIRPORT = AIRPORT.AIRPORT_CODE
# FLIGHT.AIRLINE_CODE = AIRLINE.AIRLINE_CODE
# FLIGHT.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCE.AIRCRAFT_CODE_SEQUENCE
# FLIGHT.MEAL_CODE = FOOD_SERVICE.MEAL_CODE
# FLIGHT_FARE.FLIGHT_ID = FLIGHT.FLIGHT_ID
# FLIGHT_FARE.FARE_ID = FARE.FARE_ID
# FLIGHT_LEG.FLIGHT_ID = FLIGHT.FLIGHT_ID
# FLIGHT_LEG.LEG_FLIGHT = FLIGHT.FLIGHT_ID
# FLIGHT_STOP.FLIGHT_ID = FLIGHT.FLIGHT_ID
# FLIGHT_STOP.STOP_DAYS = DAYS.DAYS_CODE
# FLIGHT_STOP.STOP_AIRPORT = AIRPORT.AIRPORT_CODE
# FLIGHT_STOP.ARRIVAL_AIRLINE = FLIGHT.AIRLINE_CODE
# FLIGHT_STOP.ARRIVAL_FLIGHT_NUMBER = FLIGHT.FLIGHT_NUMBER
# FLIGHT_STOP.DEPARTURE_AIRLINE = FLIGHT.AIRLINE_CODE
# FLIGHT_STOP.DEPARTURE_FLIGHT_NUMBER = FLIGHT.FLIGHT_NUMBER
# FOOD_SERVICE.COMPARTMENT = COMPARTMENT_CLASS.CLASS_TYPE
# GROUND_SERVICE.CITY_CODE = CITY.CITY_CODE
# GROUND_SERVICE.AIRPORT_CODE = AIRPORT.AIRPORT_CODE"""

ehrsql_db_schema = """\
# admissions ( row_id, subject_id, hadm_id, admittime, dischtime, admission_type, admission_location, discharge_location, insurance, language, marital_status, age )
# chartevents ( row_id, subject_id, hadm_id, stay_id, charttime, itemid, valuenum, valueuom )
# cost ( row_id, subject_id, hadm_id, event_type, event_id, chargetime,cost )
# d_icd_diagnoses ( row_id, icd_code, long_title )
# d_icd_procedures ( row_id, icd_code, long_title )
# d_items ( row_id, itemid, label, abbreviation, linksto )
# d_labitems ( row_id, itemid, label )
# dianoses_icd ( row_id, subject_id, hadm_id, icd_code, charttime )
# icustays ( row_id, subject_id, hadm_id, stay_id, first_careunit, last_careunit, intime, outtime )
# inputevents ( row_id, subject_id, hadm_id, stay_id, starttime, itemid, amount )
# labevents ( row_id, subject_id, hadm_id, itemid, charttime, valuenum, valueuom )
# microbiologyevents ( row_id, subject_id, hadm_id, charttime, spec_type_desc, test_name, org_name )
# outputevents ( row_id, subject_id, hadm_id, stay_id, charttime, itemid, value )
# patients ( row_id, subject_id, gender, dob, dod )
# prescriptions ( row_id, subject_id, hadm_id, starttime, stoptime, drug, dose_val_rx, dose_unit_rx, route )
# procedures_icd ( row_id, subject_id, hadm_id, icd_code, charttime )
# transfers ( row_id, subject_id, hadm_id, transfer_id, eventtype, careunit, intime, outtime )
#
# admissions.subject_id = patients.subject_id
# diagnoses_icd.hadm_id = admissions.hadm_id
# diagnoses_icd.icd_code = d_icd_diagnoses.icd_code
# procedures_icd.hadm_id = admissions.hadm_id
# procedures_icd.icd_code = d_icd_procedures.icd_code
# labevents.hadm_id = admissions.hadm_id
# labevents.itemid = d_labitems.itemid
# prescriptions.hadm_id = admissions.hadm_id
# cost.hadm_id = admissions.hadm_id
# cost.event_id = diagnoses_icd.row_id
# cost.event_id = procedures_icd.row_id
# cost.event_id = labevents.row_id
# cost.event_id = prescriptions.row_id
# chartevents.hadm_id = admissions.hadm_id
# chartevents.stay_id = icustays.stay_id
# chartevents.itemid = d_items.itemid
# inputevents.hadm_id = admissions.hadm_id
# inputevents.stay_id = icustays.stay_id
# inputevents.itemid = d_items.itemid
# outputevents.hadm_id = admissions.hadm_id
# outputevents.stay_id = icustays.stay_id
# outputevents.itemid = d_items.itemid
# microbiologyevents.hadm_id = admissions.hadm_id
# icustays.hadm_id = admissions.hadm_id
# transfers.hadm_id = admissions.hadm_id"""